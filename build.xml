<project name="Salesforce Sandbox Ant Tasks" default="help" basedir="."
  xmlns:sf="antlib:com.salesforce">

  <property name="dir.logs" location="logs"/>
  <property name="dir.lib" location="lib"/>
  <property name="dir.deploy.dev" location="deploy.dev"/>
  <property name="dir.deploy.backup.sandbox" location="deploy/backup/sandbox"/>
  <property name="dir.deploy.backup.production" location="deploy/backup/production"/>
  <property name="dir.retrieve" location="retrieve"/>
  <property name="dir.retrieve.sandbox" location="retrieve/sandbox"/>
  <property name="dir.retrieve.production" location="retrieve/production"/>
  <property name="dir.undeploy" location="undeploy"/>
  <property name="dir.undeploy.backup.sandbox" location="undeploy/backup/sandbox"/>
  <property name="dir.undeploy.backup.production" location="undeploy/backup/production"/>
  <property name="file.pkg" location="package.xml"/>
  <property name="file.deploy.dev.pkg" location="deploy/dev/package.xml"/>
  <property name="file.retrieve.sandbox.pkg" location="retrieve/sandbox/package.xml"/>
  <property name="file.retrieve.production.pkg" location="retrieve/production/package.xml"/>
  <property file="build.properties"/>
  <property file="default.properties"/>
  <property file="library.properties"/>
  <property name="lib.sf-ant.jar" location="${dir.lib}/${sf-ant.name}-${sf-ant.version}.jar"/>
  <property name="lib.ant-contrib.jar" location="${dir.lib}/${ant-contrib.name}-${ant-contrib.version}.jar"/>
  <property name="lib.junit.jar" location="${dir.lib}/${junit.name}-${junit.version}.jar"/>
  <property name="lib.hamcrest-core.jar" location="${dir.lib}/${hamcrest-core.name}-${hamcrest-core.version}.jar"/>

  <taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
    <classpath>
      <pathelement location="${lib.sf-ant.jar}"/>
    </classpath>
  </taskdef>

  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="${lib.ant-contrib.jar}"/>
    </classpath>
  </taskdef>

  <path id="classpath.test">
    <pathelement location="${lib.junit.jar}"/>
    <pathelement location="${lib.hamcrest.jar}"/>
    <pathelement location="${lib.main.build.dir}"/>
  </path>

  <target name="-init" depends="-setDestructiveChangesXml">
    <mkdir dir="${dir.logs}"/>
    <tstamp>
      <format property="tstamp" pattern="yyyyMMddhhmm" locale="en,US"/>
    </tstamp>
  </target>

  <macrodef name="setCredentials">
    <attribute name="org" default="sandbox"/>
    <sequential>
      <condition property="sf.@{org}.username" value=""> <not><isset property="sf.@{org}.username"/></not></condition>
      <condition property="sf.@{org}.password" value=""> <not><isset property="sf.@{org}.password"/></not></condition>
      <condition property="sf.@{org}.sessionId" value=""> <not><isset property="sf.@{org}.sessionId"/></not></condition>
      <condition property="sf.username" value="${sf.sandbox.username}" else="${sf.production.username}">
        <equals arg1="@{org}" arg2="sandbox"/>
      </condition>
      <condition property="sf.password" value="${sf.sandbox.password}" else="${sf.production.password}">
        <equals arg1="@{org}" arg2="sandbox"/>
      </condition>
      <condition property="sf.sessionId" value="${sf.sandbox.sessionId}" else="${sf.production.sessionId}">
        <equals arg1="@{org}" arg2="sandbox"/>
      </condition>
    </sequential>
  </macrodef>

  <target name="-setDestructiveChangesXml">
    <if>
      <available file="undeploy/destructiveChanges.xml"/>
      <then>
        <property name="file.undeploy.destructive-changes" location="undeploy/destructiveChanges.xml"/>
      </then>
      <elseif>
        <available file="undeploy/destructiveChangesPre.xml"/>
        <then>
          <property name="file.undeploy.destructive-changes" location="undeploy/destructiveChangesPre.xml"/>
        </then>
      </elseif>
      <else>
        <available file="undeploy/destructiveChangesPost.xml"/>
        <then>
          <property name="file.undeploy.destructive-changes" location="undeploy/destructiveChangesPost.xml"/>
        </then>
      </else>
    </if>
  </target>

  <target name="-logproperties">
    <touch file="${dir.logs}/my.properties"/>
    <echoproperties destfile="${dir.logs}/my.properties">
      <propertyset>
        <propertyref prefix="sf."/>
        <propertyref prefix="server."/>
        <propertyref prefix="value."/>
        <propertyref prefix="value."/>
        <propertyref prefix="lib."/>
      </propertyset>
    </echoproperties>
  </target>

  <target name="-printproperties" depends="-logproperties">
    <loadfile property="myproperties" srcFile="${dir.logs}/my.properties"/> 
    <echo>${myproperties}</echo> 
  </target>

  <macrodef name="getRequestId">
    <attribute name="srcFile"/>
    <sequential>
      <loadfile srcFile="@{srcFile}" property="dev.deploy.requestId">
        <filterchain>
          <tailfilter lines="1"/>
          <tokenfilter>
            <stringtokenizer suppressdelims="true"/>
            <containsregex pattern="[a-zA-Z0-9]{18}"/>
          </tokenfilter>
        </filterchain>
      </loadfile>
    </sequential>
  </macrodef>

  <target name="-logRequestId">
    <getRequestId srcFile="${dir.logs}/deploylog.txt"/>
  <echo file="${dir.logs}/request-ids.txt" append="true"
    message="${line.separator}${tstamp}: ${dev.deploy.root}=>${dev.deploy.serverurl}  ${dev.deploy.requestId}"/>
</target>

  <target name="-setDeployServerurl">
    <loadfile srcFile="${dir.logs}/request-ids.txt" property="dev.deploy.serverurl">
      <filterchain>
        <tailfilter lines="1"/>
        <tokenfilter>
          <stringtokenizer suppressdelims="true"/>
          <containsregex pattern="\=\>"/>
        </tokenfilter>
        <tokenfilter>
          <stringtokenizer suppressdelims="true"/>
          <containsregex pattern=".+\=\>(\S+)" replace="\1"/>
        </tokenfilter>
      </filterchain>
    </loadfile>
  </target>

  <target name="help" description="List properties and targets" depends="-init">
    <antcall target="-printproperties"/>
    <java classname="org.apache.tools.ant.Main">
      <arg value="${ant.file}"/>
    </java>
  </target>

  <target name="clean" description="Destroy all generated files and dirs">
    <delete>
      <fileset dir="." includes="**/*.ant-targets-build.xml"/>
    </delete>
    <delete includeemptydirs="true">
      <fileset dir="${dir.deploy.backup}" includes="**/*" erroronmissingdir="false"/>
      <fileset dir="${dir.retrieve}" excludes="package.xml" erroronmissingdir="false"/>
      <fileset dir="${dir.undeploy}" excludes="*.xml" erroronmissingdir="false"/>
      <fileset dir="${dir.logs}" erroronmissingdir="false"/>
    </delete>
  </target>

  <macrodef name="describeMetadata">
    <attribute name="org" default="sandbox"/>
    <attribute name="serverurl" default="${server.sandbox}"/>
    <sequential>
      <setCredentials org="@{org}"/>
      <touch file="${dir.logs}/describe-@{org}.log"/>
      <sf:describeMetadata username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="@{serverurl}"
        resultFilePath="${dir.logs}/describe-@{org}.log"/>
    </sequential>
  </macrodef>

  <macrodef name="listMetadata">
    <attribute name="org" default="sandbox"/>
    <attribute name="serverurl" default="${server.sandbox}"/>
    <attribute name="metadataType" default="AuraDefinitionBundle"/>
    <sequential>
      <setCredentials org="@{org}"/>
      <touch file="${dir.logs}/list-@{org}.log"/>
      <sf:listMetadata username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="@{serverurl}"
        resultFilePath="${dir.logs}/list-@{org}.log" metadataType="@{metadataType}"/>
    </sequential>
  </macrodef>

  <macrodef name="retrieve">
    <attribute name="org" default="sandbox"/>
    <attribute name="serverurl" default="${server.sandbox}"/>
    <attribute name="retrieveTarget" default="${dir.retrieve.sandbox}"/>
    <attribute name="pkg" default="${file.retrieve.sandbox.pkg}"/>
    <sequential>
      <setCredentials org="@{org}"/>
      <delete includeemptydirs="true">
        <fileset dir="@{retrieveTarget}" excludes="package.xml" erroronmissingdir="false"/>
      </delete>
      <mkdir dir="@{retrieveTarget}"/>
      <sf:retrieve username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="@{serverurl}"
        maxPoll="${server.maxPoll}" retrieveTarget="@{retrieveTarget}" unpackaged="@{pkg}"/>
    </sequential>
  </macrodef>

  <macrodef name="deploy">
    <attribute name="org" default="sandbox"/>
    <attribute name="serverurl" default="${server.sandbox}"/>
    <attribute name="deployRoot" default="${dir.deploy.dev}"/>
    <attribute name="backupRoot" default="${dir.deploy.backup.sandbox}"/>
    <attribute name="pkg" default="${file.deploy.dev.pkg}"/>
    <sequential>
      <setCredentials org="@{org}"/>
      <retrieve org="@{org}" serverurl="@{serverurl}" retrieveTarget="@{backupRoot}" pkg="@{pkg}"/>
      <record name="${dir.logs}/deploylog.txt" action="start"/>
      <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="@{serverurl}"
        maxPoll="${server.maxPoll}" deployRoot="@{deployRoot}" rollbackOnError="true" ignoreWarnings="false"/>
      <record name="${dir.logs}/deploylog.txt" action="stop"/>
      <property name="dev.deploy.serverurl" value="@{serverurl}"/>
      <property name="dev.deploy.root" value="@{deployRoot}"/>
      <antcall target="-logRequestId"/>
    </sequential>
  </macrodef>

  <macrodef name="cancelDeploy">
    <sequential>
      <getRequestId srcFile="${dir.logs}/request-ids.txt"/>
      <antcall target="-setDeployServerurl"/>
      <setCredentials org="#TODO"/>
      <sf:cancelDeploy  username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${dev.deploy.serverurl}"
        maxPoll="${server.maxPoll}" requestId="${dev.deploy.requestId}"/>
    </sequential>
  </macrodef>

  <target name="describeSandboxMetadata" depends="-init" description="">
    <describeMetadata org="sandbox" serverurl="${server.sandbox}"/>
  </target>

  <target name="describeProductionMetadata" depends="-init" description="" >
    <describeMetadata org="production" serverurl="${server.production}"/>
  </target>

  <target name="listSandboxMetadata" depends="-init" description="Retrieve information on all items of a particular metadatatype" >
    <listMetadata org="sandbox" serverurl="${server.sandbox}" metadataType="${value.metadataType}"/>
  </target>

  <target name="listProductionMetadata" depends="-init" description="">
    <listMetadata org="production" serverurl="${server.production}" metadataType="${value.metadataType}"/>
  </target>

  <target name="retrieveSandbox" depends="-init" description="">
    <retrieve org="sandbox" serverurl="${server.sandbox}" retrieveTarget="${dir.retrieve.sandbox}" pkg="${file.retrieve.sandbox.pkg}"/>
  </target>

  <target name="retrieveProduction" depends="-init" description="">
    <retrieve org="production" serverurl="${server.production}" retrieveTarget="${dir.retrieve.production}" pkg="${file.retrieve.production.pkg}"/>
  </target>

  <target name="deployToSandbox" depends="-init" description="">
    <deploy org="sandbox" serverurl="${server.sandbox}" deployRoot="${dir.deploy.dev}" backupRoot="${dir.deploy.backup.sandbox}" pkg="${deploy.pkg}"/>
  </target>

  <target name="deployToProduction" depends="-init" description="">
    <deploy org="production" serverurl="${server.production}" deployRoot="${dir.deploy.dev}" backupRoot="${dir.deploy.backup.production}" pkg="${deploy.pkg}"/>
  </target>

  <target name="undeployFromSandbox" depends="-init" description="">
    <deploy org="sandbox" serverurl="${server.sandbox}" deployRoot="${dir.undeploy}" backupRoot="${dir.undeploy.backup.sandbox}" pkg="${file.undeploy.destructive-changes}"/>
  </target>

  <target name="undeployFromProduction" depends="-init" description="">
    <deploy org="production" serverurl="${server.production}" deployRoot="${dir.undeploy}" backupRoot="${dir.undeploy.backup.production}" pkg="${file.undeploy.destructive-changes}"/>
  </target>

  <target name="cancelLastDeploy" depends="-init" description="">
    <cancelDeploy/>
  </target>

</project>
